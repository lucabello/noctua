[tox]
skipdist = True
skip_missing_interpreters = True
isolated_build = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}/src
test_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]test_path}

[testenv]
basepython = python3
setenv =
  PYTHONPATH = {toxinidir}:{[vars]src_path}
  PY_COLORS=1
passenv =
  PYTHONPATH

[testenv:fmt]
description = Apply coding style standards to code
deps = 
  black
  ruff
commands = 
  ruff check --fix {[vars]all_path}
  ruff format

[testenv:lint]
description = Check code against coding style standards
deps =
  ruff
  codespell
commands =
  codespell .
  ruff check {[vars]all_path}
  ruff format --check

[testenv:static]
deps =
  pyright
  pytest
commands =
  pyright {[vars]all_path} {posargs}

[testenv:unit]
description = Run unit tests
passenv =
  PYTHONPATH
deps = 
  pytest
  pytest-cov
  sh
  typer
  tenacity
  requests
  rich
commands =
  coverage run \
    --source={[vars]src_path} \
    -m pytest -v --tb=native --log-cli-level=INFO -s {posargs} \
    {[vars]test_path}
  coverage report -m
